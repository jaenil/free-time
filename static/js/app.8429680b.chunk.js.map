{"version":3,"sources":["assets/privacy.md","src/PreferencesContext.js","src/Header.js","src/EnumActivityPeriod.js","src/utils/utils.js","src/ActivityList.js","src/components/ErrorBoundary.js","src/analytics/ActivityPie.js","src/HighLevelAssessment.js","src/utils/UrlUtility.js","src/Footer.js","src/Home.js","src/PrivacyPolicy.js","src/Theme.js","App.js"],"names":["module","exports","PreferencesContext","React","createContext","toggleTheme","inThemeDark","Header","navigation","route","options","back","theme","useTheme","useContext","isThemeDark","Appbar","colors","primary","surface","BackAction","onPress","goBack","Content","title","getHeaderTitle","name","TouchableRipple","Switch","color","value","ActivityPeriods","Object","freeze","DAY","text","multiplier","WORK_DAY","WEEK_END","WEEK","MONTH","randomColor","Math","random","toString","slice","ActivityList","props","activities","setActivities","styles","StyleSheet","create","row","flexDirection","width","paddingHorizontal","paddingTop","paddingBottom","marginHorizontal","marginVertical","backgroundColor","borderRadius","roundness","flexWrap","activityName","flexGrow","activityDetails","flex","height","alignItems","minWidth","activityHours","activityPeriodButton","background","borderWidth","borderColor","disabled","activityPeriodDropdownText","textAlign","fontFamily","fonts","regular","fontWeight","fontSize","activityPeriodDropdown","maxHeight","activityPeriodRow","paddingVertical","addActivityButton","deleteActivityButton","position","margin","top","right","alignSelf","View","style","map","activity","index","TextInput","label","onChangeText","activityIndex","activityNewName","ReactGA","event","category","action","dimension1","dimension2","duration","metric1","hours","metric2","mode","dense","timeVal","activityNewHours","parseFloat","round","Affix","data","values","onSelect","selectedPeriod","unitIdx","activityNewPeriod","buttonTextAfterSelection","rowTextForSelection","defaultValue","buttonStyle","buttonTextStyle","dropdownStyle","rowStyle","rowTextStyle","IconButton","icon","size","Button","length","ErrorBoundary","state","hasError","error","errorInfo","console","warn","this","children","Component","ActivityPie","totalHoursInWeek","useState","setData","useEffect","freeHours","pieData","filter","hoursInWeek","key","svg","fill","log","push","stroke","placeholder","strokeWidth","arc","outerRadius","innerRadius","cornerRadius","constructDataFromActivities","pieChart","sort","a","b","maxWidth","aspectRatio","HighLevelAssessment","hoursRemaining","setHoursRemaining","totalOccupiedHours","calculateRemainingTime","totalFreeHoursText","Caption","Headline","activityPie","justifyContent","openURL","url","useCallback","async","Linking","canOpenURL","Alert","alert","Footer","useNavigation","footer","borderTopWidth","marginTop","copyright","Text","Date","getFullYear","uppercase","compact","navigate","responsiveStyles","query","freeTimeWidget","activityListStyle","highLevelAssessmentStyle","minHeight","commonStyles","container","content","description","Home","send","merge","useStylesheet","ScrollView","Paragraph","StatusBar","PrivacyPolicy","privacyPolicyText","setPrivacyPolicyText","privacyPolicyContents","fetch","privacyPolicyFile","then","res","CombinedDefaultTheme","PaperDefaultTheme","NavigationDefaultTheme","CombinedDarkTheme","PaperDarkTheme","NavigationDarkTheme","DefaultTheme","accent","DarkTheme","Stack","createNativeStackNavigator","App","initialize","setIsThemeDark","preferences","useMemo","Provider","NavigationContainer","Helmet","src","crossorigin","Navigator","initialRouteName","screenOptions","header","Screen","component"],"mappings":"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","file":"static/js/app.8429680b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/privacy.0d442213.md\";","import React from 'react';\nexport const PreferencesContext = React.createContext({\n    toggleTheme: () => { },\n    inThemeDark: false,\n});","import React from 'react';\nimport { useTheme, Appbar, TouchableRipple, Switch } from 'react-native-paper';\nimport { PreferencesContext } from './PreferencesContext';\nimport { getHeaderTitle } from '@react-navigation/elements'\n\nexport const Header = ({ navigation, route, options, back }) => {\n    const theme = useTheme();\n    const { toggleTheme, isThemeDark } = React.useContext(PreferencesContext);\n\n    return (\n        <Appbar.Header\n            theme={{\n                colors: {\n                    primary: theme?.colors.surface,\n                },\n            }}\n        >\n            {back ? <Appbar.BackAction onPress={navigation.goBack} /> : null}\n            <Appbar.Content title={getHeaderTitle(options, route.name)} />\n            <TouchableRipple onPress={() => toggleTheme()}>\n                <Switch\n                    color={theme.colors.primary}\n                    value={isThemeDark}\n                />\n            </TouchableRipple>\n        </Appbar.Header>\n    );\n};","export const ActivityPeriods = Object.freeze({\n    DAY: {\n        text: \"per day\",\n        multiplier: 7,\n    },\n    WORK_DAY: {\n        text: \"per workday\",\n        multiplier: 5,\n    },\n    WEEK_END: {\n        text: \"per holiday\",\n        multiplier: 2,\n    },\n    WEEK: {\n        text: \"per week\",\n        multiplier: 1,\n    },\n    MONTH: {\n        text: \"per month\",\n        multiplier: 7 * 12 / 365,\n    },\n})","export const randomColor = () =>\n    ('#' + ((Math.random() * 0xffffff) << 0).toString(16) + '000000').slice(0, 7)\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, IconButton, TextInput, useTheme } from 'react-native-paper';\nimport SelectDropdown from 'react-native-select-dropdown';\nimport ReactGA from 'react-ga4';\nimport { ActivityPeriods } from './EnumActivityPeriod';\nimport { randomColor } from './utils/utils';\n\nexport const ActivityList = (props) => {\n    const { activities, setActivities } = props;\n\n    // styles\n    const theme = useTheme();\n    const styles = StyleSheet.create({\n        row: {\n            flexDirection: 'row',\n            width: '96%',\n            paddingHorizontal: '5px',\n            paddingTop: '5px',\n            paddingBottom: '10px',\n            marginHorizontal: '2%',\n            marginVertical: '5px',\n            backgroundColor: theme.colors.surface,\n            borderRadius: theme.roundness,\n            flexWrap: 'wrap'\n        },\n        activityName: {\n            flexGrow: 1,\n            marginHorizontal: '5px'\n        },\n        activityDetails: {\n            flex: 1,\n            flexDirection: 'row',\n            flexWrap: 'nowrap',\n            height: 'auto',\n            alignItems: 'flex-end',\n            minWidth: 256,\n        },\n        activityHours: {\n            flex: 1,\n            minWidth: 108,\n            marginHorizontal: '5px',\n        },\n        activityPeriodButton: {\n            flex: 1,\n            minWidth: 128,\n            height: '90%',\n            marginHorizontal: '5px',\n            backgroundColor: theme.colors.background,\n            borderWidth: '1px',\n            borderRadius: theme.roundness,\n            borderColor: theme.colors.disabled,\n        },\n        activityPeriodDropdownText: {\n            color: theme.colors.text,\n            textAlign: 'left',\n            fontFamily: theme.fonts.regular.fontFamily,\n            fontWeight: theme.fonts.regular.fontWeight,\n            fontSize: '16px'\n        },\n        activityPeriodDropdown: {\n            backgroundColor: theme.colors.surface,\n            height: 'auto',\n            maxHeight: '197px',\n            borderRadius: theme.roundness\n        },\n        activityPeriodRow: {\n            paddingVertical: '10px',\n            backgroundColor: theme.colors.background\n        },\n        addActivityButton: {\n            width: '96%',\n            paddingHorizontal: '5px',\n            paddingVertical: '5px',\n            marginHorizontal: '2%',\n            marginVertical: '5px'\n        },\n        deleteActivityButton: {\n            position: 'absolute',\n            margin: 0,\n            top: -8,\n            right: -8,\n            alignSelf: 'flex-start',\n            height: 'auto',\n            width: 'auto',\n            borderRadius: 8\n        },\n    })\n\n    const changeNameOfActivity = (activityIndex, activityNewName) => {\n        ReactGA.event({\n            category: \"ActivityList\",\n            action: \"Changed Name\",\n            value: activityIndex,\n            dimension1: activityNewName,\n            dimension2: activities[activityIndex].duration.text,\n            metric1: activities[activityIndex].hours,\n            metric2: activities[activityIndex].duration.multiplier,\n        });\n        setActivities([\n            ...activities.slice(0, activityIndex),\n            {\n                ...activities[activityIndex],\n                name: activityNewName,\n            },\n            ...activities.slice(activityIndex + 1)]);\n    }\n\n    const changeHoursOfActivity = (activityIndex, activityNewHours) => {\n        ReactGA.event({\n            category: \"ActivityList\",\n            action: \"Changed Hours\",\n            value: activityIndex,\n            dimension1: activities[activityIndex].name,\n            dimension2: activities[activityIndex].duration.text,\n            metric1: activityNewHours,\n            metric2: activities[activityIndex].duration.multiplier,\n        });\n        if (activityNewHours == \"\") {\n            activityNewHours = 0;\n        }\n        else {\n            activityNewHours = parseFloat(activityNewHours)\n            activityNewHours = Math.round(activityNewHours * 100) / 100\n        }\n        setActivities([\n            ...activities.slice(0, activityIndex),\n            {\n                ...activities[activityIndex],\n                hours: activityNewHours,\n            },\n            ...activities.slice(activityIndex + 1)]);\n    }\n\n    const changePeriodOfActivity = (activityIndex, activityNewPeriod) => {\n        ReactGA.event({\n            category: \"ActivityList\",\n            action: \"Changed Duration\",\n            value: activityIndex,\n            dimension1: activities[activityIndex].name,\n            dimension2: activityNewPeriod.text,\n            metric1: activities[activityIndex].hours,\n            metric2: activityNewPeriod.multiplier,\n        });\n        setActivities([\n            ...activities.slice(0, activityIndex),\n            {\n                ...activities[activityIndex],\n                duration: activityNewPeriod\n            },\n            ...activities.slice(activityIndex + 1)]);\n    }\n\n    const addActivity = () => {\n        ReactGA.event({\n            category: \"ActivityList\",\n            action: \"Added Activity\",\n            value: activities.length,\n        });\n        setActivities([\n            ...activities,\n            {\n                name: '',\n                hours: 0,\n                duration: ActivityPeriods.WEEK,\n                color: randomColor(),\n            }\n        ]);\n    }\n\n    const deleteActivity = (activityIndex) => {\n        ReactGA.event({\n            category: \"ActivityList\",\n            action: \"Deleted Activity\",\n            value: activityIndex,\n            dimension1: activities[activityIndex].name,\n            dimension2: activities[activityIndex].duration.text,\n            metric1: activities[activityIndex].hours,\n            metric2: activities[activityIndex].duration.multiplier,\n        });\n        setActivities([\n            ...activities.slice(0, activityIndex),\n            ...activities.slice(activityIndex + 1)]);\n    }\n\n    return (\n        <View style={props.style}>\n            {activities.map((activity, index) => (\n                <View style={styles.row} key={index}>\n                    <TextInput\n                        label=\"Activity\"\n                        value={activity.name}\n                        onChangeText={activityName => changeNameOfActivity(index, activityName)}\n                        style={styles.activityName}\n                        mode=\"outlined\"\n                        dense\n                    />\n                    <View style={styles.activityDetails}>\n                        <TextInput\n                            label={\"Time\"}\n                            value={activity.hours.toString()}\n                            onChangeText={timeVal => changeHoursOfActivity(index, timeVal)}\n                            style={styles.activityHours}\n                            right={<TextInput.Affix text='Hours' />}\n                            mode=\"outlined\"\n                            dense\n                        />\n                        <SelectDropdown\n                            data={Object.values(ActivityPeriods)}\n                            onSelect={(selectedPeriod, unitIdx) => {\n                                changePeriodOfActivity(index, selectedPeriod)\n                            }}\n                            buttonTextAfterSelection={(selectedPeriod, unitIdx) => selectedPeriod.text}\n                            rowTextForSelection={(selectedPeriod, unitIdx) => selectedPeriod.text}\n                            defaultValue={activity.duration}\n                            buttonStyle={styles.activityPeriodButton}\n                            buttonTextStyle={styles.activityPeriodDropdownText}\n                            dropdownStyle={styles.activityPeriodDropdown}\n                            rowStyle={styles.activityPeriodRow}\n                            rowTextStyle={styles.activityPeriodDropdownText}\n                        />\n                    </View>\n                    <IconButton\n                        icon='close-circle'\n                        size={16}\n                        onPress={() => deleteActivity(index)}\n                        color={theme.colors.primary}\n                        style={styles.deleteActivityButton}\n                    />\n                </View>\n            ))}\n            <Button icon='plus' mode='contained' style={styles.addActivityButton} onPress={addActivity}>\n                Add Activity\n            </Button>\n        </View>\n    )\n}","import React from \"react\";\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        console.warn(error, errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React from \"react\";\nimport { PieChart } from \"react-native-svg-charts\";\nimport { View, StyleSheet } from \"react-native\";\nimport { useTheme } from \"react-native-paper\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\n\nexport function ActivityPie(props) {\n    const { activities, totalHoursInWeek } = props;\n    const [data, setData] = React.useState([])\n    const theme = useTheme();\n\n    const constructDataFromActivities = (activities) => {\n\n        let freeHours = totalHoursInWeek;\n        const pieData = activities\n            .filter((activity) => activity.hours * activity.duration.multiplier > 0)\n            .map((activity, index) => {\n                const hoursInWeek = activity.hours * activity.duration.multiplier;\n                freeHours -= hoursInWeek;\n                return {\n                    value: hoursInWeek,\n                    key: index,\n                    svg: {\n                        fill: activity.color,\n                        onPress: () => console.log('press', activity.name),\n                    }\n                }\n            })\n\n        pieData.push({\n            value: freeHours,\n            key: \"free-time\",\n            svg: {\n                fill: theme.colors.background,\n                stroke: theme.colors.placeholder,\n                strokeWidth: 2,\n                onPress: () => console.log('press', 'free-time'),\n            },\n            arc: { outerRadius: '100%', innerRadius: '40%', cornerRadius: 10, }\n        })\n        return pieData\n    }\n\n    React.useEffect(() => {\n        setData(constructDataFromActivities(activities));\n    }, [activities, theme])\n\n    return (\n        <View style={props.style}>\n            <ErrorBoundary >\n                <PieChart\n                    style={styles.pieChart}\n                    data={data}\n                    sort={(a, b) => (b.key === \"free-time\") ? 1\n                        : (a.key === \"free-time\") ? -1\n                            : b.value - a.value\n                    }\n                >\n                    {props.children}\n                </PieChart>\n            </ErrorBoundary>\n        </View >\n    )\n}\n\nconst styles = StyleSheet.create({\n    pieChart: {\n        alignSelf: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        aspectRatio: 1,\n        width: '100%',\n    }\n})","import React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { Caption, Headline } from 'react-native-paper';\nimport { ActivityPie } from \"./analytics/ActivityPie\";\n\nexport function HighLevelAssessment(props) {\n    const { activities } = props;\n\n    const totalHoursInWeek = 168;\n\n    const [hoursRemaining, setHoursRemaining] = React.useState(168);\n    const calculateRemainingTime = () => {\n        let totalOccupiedHours = 0;\n        for (const activity of activities) {\n            totalOccupiedHours += activity.hours * activity.duration.multiplier\n        }\n        setHoursRemaining(totalHoursInWeek - totalOccupiedHours)\n    }\n\n    const getDisplayHours = (hours) => (\n        Math.round(10 * hours) / 10\n    )\n\n    React.useEffect(() => {\n        calculateRemainingTime();\n    }, [activities])\n\n    return (\n        <View style={props.style}>\n            <View style={styles.totalFreeHoursText}>\n                <Caption>You have</Caption>\n                <Headline>{getDisplayHours(hoursRemaining)} / {totalHoursInWeek}</Headline>\n                <Caption style={{ textAlign: 'center' }}>free hours in<br />your week</Caption>\n            </View>\n            <ActivityPie activities={activities} totalHoursInWeek={totalHoursInWeek} style={styles.activityPie} >\n            </ActivityPie>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    totalFreeHoursText: {\n        position: 'absolute',\n        width: '50%',\n        height: 'auto',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    activityPie: {\n        position: 'absolute',\n        width: '90%',\n        height: '90%',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n})","import { useCallback } from \"react\";\nimport { Linking } from \"react-native\";\n\nexport const openURL = (url) => useCallback(async () => {\n    // Checking if the link is supported for links with custom URL scheme.\n    const supported = await Linking.canOpenURL(url);\n\n    if (supported) {\n        // Opening the link with some app, if the URL scheme is \"http\" the web link should be opened\n        // by some browser in the mobile\n        await Linking.openURL(url);\n    } else {\n        Alert.alert(`Don't know how to open this URL: ${url}`);\n    }\n}, [url]);\n","import { useNavigation } from \"@react-navigation/native\";\nimport React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { Button, Text, useTheme } from \"react-native-paper\";\nimport { openURL } from './utils/UrlUtility';\n\nexport function Footer(props) {\n    const navigation = useNavigation();\n    const theme = useTheme();\n\n    const styles = StyleSheet.create(({\n        footer: {\n            flexDirection: 'row',\n            backgroundColor: theme.colors.surface,\n            borderTopWidth: '1px',\n            borderColor: theme.colors.disabled,\n            color: theme.colors,\n            marginTop: '5em',\n        },\n        copyright: {\n            height: 'auto',\n            alignSelf: 'center',\n            flexGrow: 1,\n            marginHorizontal: '1em'\n        },\n    }))\n\n    const Copyright = () => {\n        return (\n            <Text style={styles.copyright}>\n                {'© '}\n                <Text onPress={openURL(\"https://github.com/avikalpg\")} >\n                    Avikalp Gupta\n                </Text >{' '}\n                {new Date().getFullYear()}\n            </Text>\n        );\n    }\n\n    return (\n        <View style={styles.footer}>\n            <Copyright />\n            <Button\n                mode=\"text\"\n                icon=\"github\"\n                onPress={openURL(\"https://github.com/avikalpg/free-time\")}\n                color={theme.colors.text}\n                uppercase={false}\n                compact>\n                Contribute\n            </Button>\n            <Button\n                mode='text'\n                onPress={() => navigation.navigate('PrivacyPolicy')}\n                color={theme.colors.text}\n                uppercase={false}\n            >\n                Privacy Policy\n            </Button>\n        </View>\n    )\n}","import React, { useState } from 'react';\nimport { StyleSheet, View, ScrollView } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport { Paragraph } from 'react-native-paper';\nimport { useStylesheet } from 'react-native-responsive-ui';\nimport merge from 'deepmerge';\nimport ReactGA from 'react-ga4';\nimport { ActivityList } from './ActivityList';\nimport { HighLevelAssessment } from './HighLevelAssessment';\nimport { ActivityPeriods } from './EnumActivityPeriod';\nimport { Footer } from './Footer';\nimport { randomColor } from './utils/utils';\n\nfunction Home(props) {\n    ReactGA.send(\"pageview\")\n    const [activities, setActivities] = useState([\n        {\n            name: \"Full-time Job\",\n            hours: 40,\n            duration: ActivityPeriods.WEEK,\n            color: randomColor(),\n        },\n        {\n            name: \"Sleep\",\n            hours: 8,\n            duration: ActivityPeriods.DAY,\n            color: randomColor(),\n        },\n        {\n            name: \"Chores\",\n            hours: 2,\n            duration: ActivityPeriods.DAY,\n            color: randomColor(),\n        },\n        {\n            name: \"Leisure\",\n            hours: 2,\n            duration: ActivityPeriods.WORK_DAY,\n            color: randomColor(),\n        },\n        {\n            name: \"Fun & Travel\",\n            hours: 8,\n            duration: ActivityPeriods.WEEK_END,\n            color: randomColor(),\n        }\n    ]);\n    const styles = merge(commonStyles, useStylesheet(responsiveStyles))\n\n    return (\n        <ScrollView style={styles.container}>\n            <View style={styles.content}>\n                <View style={styles.description}>\n                    <Paragraph>Do you know, we have 168 hours in a week. Most full time jobs demand only 40-48 hours of work in a week.\n                        This means that we have almost 3-times as much time in our week as we devote to our full-time jobs.\n                        How do you spend this time?\n                    </Paragraph>\n                    <Paragraph>The purpose of this website is gaining self-awareness about the amount of free time you have in your week</Paragraph>\n                </View>\n                <View style={styles.freeTimeWidget}>\n                    <ActivityList activities={activities} setActivities={setActivities} style={styles.activityListStyle} />\n                    <HighLevelAssessment activities={activities} style={styles.highLevelAssessmentStyle} />\n                </View>\n            </View>\n            <Footer />\n            <StatusBar style=\"auto\" />\n        </ScrollView>\n    )\n\n}\n\nconst responsiveStyles = [\n    {\n        query: { minWidth: 900 },\n        style: {\n            freeTimeWidget: {\n                flexDirection: 'row',\n            },\n            activityListStyle: {\n                flexDirection: 'column',\n                width: '50%',\n            },\n            highLevelAssessmentStyle: {\n                width: '50%',\n                height: '100%',\n                alignItems: 'center',\n                justifyContent: 'center',\n                minHeight: '300px',\n            },\n        }\n    },\n    {\n        query: { maxWidth: 900 },\n        style: {\n            freeTimeWidget: {\n                flexDirection: 'column',\n                width: '96%',\n                alignSelf: 'center',\n            },\n            activityListStyle: {\n                flexDirection: 'column',\n                width: '100%',\n            },\n            highLevelAssessmentStyle: {\n                width: '100%',\n                height: 'auto',\n                alignItems: 'center',\n                justifyContent: 'center',\n                minHeight: '300px',\n            },\n        }\n    },\n]\n\nconst commonStyles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    content: {\n        flex: 1,\n        maxWidth: 1250,\n        alignSelf: 'center',\n        width: '100%',\n    },\n    description: {\n        width: '80%',\n        alignSelf: 'center',\n        flexWrap: 'wrap',\n        paddingVertical: '2em'\n    },\n});\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport Markdown from 'react-native-markdown-renderer';\nimport { StatusBar } from 'expo-status-bar';\nimport ReactGA from 'react-ga4';\n\nimport privacyPolicyFile from '../assets/privacy.md';\nimport { Text } from 'react-native-paper';\nimport { Footer } from './Footer';\n\nexport default function PrivacyPolicy(props) {\n    ReactGA.send('pageview');\n    const [privacyPolicyText, setPrivacyPolicyText] = useState(\"placeholder text\");\n    const styles = StyleSheet.create({\n        privacyPolicyContents: {\n            margin: '1em',\n        }\n    })\n\n    useEffect(() => {\n        fetch(privacyPolicyFile).then(res => res.text()).then(text => {\n            setPrivacyPolicyText(text);\n        });\n    }, []);\n\n    return (\n        <ScrollView>\n            <Text style={styles.privacyPolicyContents}>\n                <Markdown>{privacyPolicyText}</Markdown>\n            </Text>\n            <Footer />\n            <StatusBar style='auto' />\n        </ScrollView>\n    )\n}","import {\n    NavigationContainer,\n    DarkTheme as NavigationDarkTheme,\n    DefaultTheme as NavigationDefaultTheme\n} from '@react-navigation/native';\nimport {\n    DefaultTheme as PaperDefaultTheme,\n    DarkTheme as PaperDarkTheme,\n    Provider as PaperProvider,\n} from 'react-native-paper';\nimport merge from 'deepmerge';\n\nconst CombinedDefaultTheme = merge(PaperDefaultTheme, NavigationDefaultTheme);\nconst CombinedDarkTheme = merge(PaperDarkTheme, NavigationDarkTheme);\n\nexport const DefaultTheme = {\n    ...CombinedDefaultTheme,\n    colors: {\n        ...CombinedDefaultTheme.colors,\n        surface: '#dfdfdf',\n        primary: 'tomato',\n        accent: 'yellow',\n    }\n};\nexport const DarkTheme = {\n    ...CombinedDarkTheme\n};","import React from 'react';\nimport { PreferencesContext } from './src/PreferencesContext';\nimport { Helmet } from 'react-helmet';\nimport { NavigationContainer, } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport ReactGA from 'react-ga4';\n\nimport { Header } from './src/Header';\nimport Home from './src/Home';\nimport PrivacyPolicy from './src/PrivacyPolicy';\nimport { DefaultTheme, DarkTheme } from './src/Theme';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n\tReactGA.initialize(\"G-S9YE72LCW4\");\n\tconst [isThemeDark, setIsThemeDark] = React.useState(false);\n\tlet theme = isThemeDark ? DarkTheme : DefaultTheme;\n\tconst toggleTheme = React.useCallback(() => {\n\t\treturn setIsThemeDark(!isThemeDark);\n\t}, [isThemeDark]);\n\n\tconst preferences = React.useMemo(() => ({\n\t\ttoggleTheme,\n\t\tisThemeDark,\n\t}), [toggleTheme, isThemeDark])\n\treturn (\n\t\t// Context is wired into the local state of our main component, so that its values could be propagated throughout the entire application\n\t\t<PreferencesContext.Provider value={preferences}>\n\t\t\t<PaperProvider theme={theme}>\n\t\t\t\t<NavigationContainer theme={theme}>\n\t\t\t\t\t<Helmet>\n\t\t\t\t\t\t<script\n\t\t\t\t\t\t\tasync\n\t\t\t\t\t\t\tsrc=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9543408536781579\"\n\t\t\t\t\t\t\tcrossorigin=\"anonymous\"></script>\n\t\t\t\t\t</Helmet>\n\t\t\t\t\t<Stack.Navigator initialRouteName='Home' screenOptions={{\n\t\t\t\t\t\theader: (props) => <Header {...props} />,\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Stack.Screen name='Home' component={Home} options={{ title: \"Free time in a Week\" }} />\n\t\t\t\t\t\t<Stack.Screen name='PrivacyPolicy' component={PrivacyPolicy} options={{ title: \"Privacy Policy\" }} />\n\t\t\t\t\t</Stack.Navigator>\n\t\t\t\t</NavigationContainer>\n\t\t\t</PaperProvider>\n\t\t</PreferencesContext.Provider>\n\t);\n}\n"],"sourceRoot":""}